# MySillyDreams Zookeeper Service - Production Configuration
spring:
  application:
    name: zookeeper-service
  
  # Security Configuration
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:}
      roles: ADMIN
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

# Server Configuration
server:
  port: ${SERVER_PORT:8084}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Zookeeper Configuration
zookeeper:
  connection-string: ${ZOOKEEPER_CONNECTION_STRING:zookeeper.mysillydreams-dev:2181}
  session-timeout: ${ZOOKEEPER_SESSION_TIMEOUT:60000}
  connection-timeout: ${ZOOKEEPER_CONNECTION_TIMEOUT:15000}
  retry:
    max-attempts: ${ZOOKEEPER_RETRY_MAX_ATTEMPTS:3}
    base-sleep-time: ${ZOOKEEPER_RETRY_BASE_SLEEP:1000}

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://eureka-server.mysillydreams-dev:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
    eureka-service-url-poll-interval-seconds: 300
    eureka-server-read-timeout-seconds: 8
    eureka-server-connect-timeout-seconds: 5
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    health-check-url-path: /actuator/health
    status-page-url-path: /actuator/info
    metadata-map:
      management.port: ${management.server.port:${server.port}}

# Management and Actuator Configuration
management:
  server:
    port: ${MANAGEMENT_PORT:${server.port}}
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
      cors:
        allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
        allowed-methods: GET,POST
        allowed-headers: "*"
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState
        liveness:
          include: livenessState,diskSpace
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms
  tracing:
    sampling:
      probability: ${TRACING_SAMPLING_PROBABILITY:0.1}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://zipkin.mysillydreams-dev:9411/api/v2/spans}

# Logging Configuration
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.mysillydreams.zookeeper: ${LOG_LEVEL_APP:INFO}
    org.apache.zookeeper: ${LOG_LEVEL_ZOOKEEPER:WARN}
    org.apache.curator: ${LOG_LEVEL_CURATOR:WARN}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.web: ${LOG_LEVEL_WEB:WARN}
    org.springframework.cloud: ${LOG_LEVEL_CLOUD:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:/app/logs/zookeeper-service.log}
    max-size: 100MB
    max-history: 30

# Application Specific Configuration
app:
  config:
    # Environment-specific service configurations
    environments:
      - dev
      - qa
      - staging
      - prod
    services:
      - api-gateway
      - auth-service
      - user-service
      - admin-server
      - eureka-server
      - zipkin
      - redis
      - vault
      - keycloak
    # Security settings
    security:
      encryption:
        algorithm: AES
        key-length: 256
      audit:
        enabled: true
        retention-days: 90
    # Performance settings
    performance:
      cache:
        enabled: true
        ttl: 300
        max-size: 1000
      connection-pool:
        max-connections: 50
        min-connections: 5
        connection-timeout: 30000

# Profile-specific configurations
---
spring:
  config:
    activate:
      on-profile: dev
logging:
  level:
    com.mysillydreams.zookeeper: DEBUG
app:
  config:
    security:
      audit:
        enabled: false

---
spring:
  config:
    activate:
      on-profile: prod
server:
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
logging:
  level:
    root: WARN
    com.mysillydreams.zookeeper: INFO
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
