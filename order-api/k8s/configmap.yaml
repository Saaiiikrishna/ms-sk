apiVersion: v1
kind: ConfigMap
metadata:
  name: order-api-config
  namespace: default # Or your target namespace
data:
  SPRING_PROFILES_ACTIVE: "kubernetes" # Profile for K8s-specific configurations
  KAFKA_BROKER: "kafka-service:9092" # Replace with your Kafka service name and port in K8s
  KEYCLOAK_URL: "http://keycloak-service/auth" # Replace with your Keycloak service URL
  APP_IDEMPOTENCY_CACHE_TTL_MINUTES: "60"
  # Add other non-sensitive configurations here
  # Example: LOGGING_LEVEL_COM_YOURORG_ORDERAPI: "INFO"
---
# Example application-kubernetes.yml content that might be used with this ConfigMap profile
# This file itself wouldn't be a K8s ConfigMap directly unless mounted as a file.
# The environment variables above are more common for K8s.
#
# spring:
#   config:
#     activate:
#       on-profile: kubernetes
# # Kafka specific for Kubernetes if different from default
# kafka:
#   bootstrap-servers: ${KAFKA_BROKER} # This will be picked up from env
#
# # Keycloak specific for Kubernetes
# keycloak:
#   auth-server-url: ${KEYCLOAK_URL} # Picked up from env
#
# # Logging can also be configured via env vars if Spring Boot supports it or via a mounted logging config file
# logging:
#   level:
#     com.yourorg.orderapi: INFO
#     org.springframework.kafka: INFO
#
# management:
#   endpoints:
#     web:
#       exposure:
#         include: "health,info,prometheus,metrics" # Standard K8s observable endpoints
#   endpoint:
#     health:
#       probes:
#         enabled: true # Enable K8s specific health probes if using Spring Boot Actuator
#
# app:
#   idempotency:
#     cache-ttl-minutes: ${APP_IDEMPOTENCY_CACHE_TTL_MINUTES}

# Note: Secrets like KEYCLOAK_SECRET should NOT be in a ConfigMap. Use a K8s Secret.
