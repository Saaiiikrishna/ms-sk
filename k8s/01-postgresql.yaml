# PostgreSQL Deployments for Multiple Services
---
# PostgreSQL for Auth Service
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-auth-pvc
  namespace: mysillydreams-dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-auth
  namespace: mysillydreams-dev
  labels:
    app: postgres-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-auth
  template:
    metadata:
      labels:
        app: postgres-auth
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "authdb"
        - name: POSTGRES_USER
          value: "authuser"
        - name: POSTGRES_PASSWORD
          value: "authpass123"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-auth-storage
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - authuser
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - authuser
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-auth-storage
        persistentVolumeClaim:
          claimName: postgres-auth-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-auth
  namespace: mysillydreams-dev
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres-auth
---
# PostgreSQL for User Service
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-user-pvc
  namespace: mysillydreams-dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-user
  namespace: mysillydreams-dev
  labels:
    app: postgres-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-user
  template:
    metadata:
      labels:
        app: postgres-user
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "userdb"
        - name: POSTGRES_USER
          value: "useruser"
        - name: POSTGRES_PASSWORD
          value: "userpass123"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-user-storage
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - useruser
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - useruser
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-user-storage
        persistentVolumeClaim:
          claimName: postgres-user-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-user
  namespace: mysillydreams-dev
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres-user
---
# PostgreSQL for Keycloak
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-keycloak-pvc
  namespace: mysillydreams-dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-keycloak
  namespace: mysillydreams-dev
  labels:
    app: postgres-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-keycloak
  template:
    metadata:
      labels:
        app: postgres-keycloak
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "keycloak"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres123"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-keycloak-storage
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-keycloak-storage
        persistentVolumeClaim:
          claimName: postgres-keycloak-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-keycloak
  namespace: mysillydreams-dev
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres-keycloak
