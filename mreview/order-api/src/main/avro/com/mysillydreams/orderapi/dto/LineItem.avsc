{
  "namespace": "com.mysillydreams.orderapi.dto.avro",
  "type": "record",
  "name": "LineItem",
  "fields": [
    {"name": "productId", "type": "string"},
    {"name": "quantity", "type": "int"},
    {"name": "price", "type": "double"}
  ]
}
// Notes on type mapping:
// UUID -> string: Standard practice for Avro.
// BigDecimal -> double: Common for Avro, but be mindful of precision loss.
//   Alternatively, use string or a logical type (bytes with precision/scale) for exact financial values.
//   For this example, 'double' is used as per the guide's Avro example, assuming it's acceptable.
//   If exact precision is critical, a custom logical type or string representation is better for BigDecimal.
//   The guide's Avro example for OrderCreatedEvent uses 'double totalAmount'. LineItem price should be consistent.
