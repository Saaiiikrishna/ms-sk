apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: order-api-ingress
  namespace: default # Or your target namespace
  annotations:
    # Replace with annotations specific to your Ingress controller
    # Example for NGINX Ingress Controller:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2 # If your paths need rewriting
    # Example for SSL termination (if using cert-manager or similar):
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  # tls: # Optional: Define TLS settings if you have SSL certificates
  # - hosts:
  #   - your.domain.com # Replace with your domain
  #   secretName: order-api-tls-secret # K8s secret containing TLS cert and key
  rules:
  - host: your.api.gateway.domain # Optional: replace with your actual hostname or leave out for wildcard
    http:
      paths:
      - path: /orders(/|$)(.*) # Matches /orders and /orders/*
        pathType: Prefix # Or ImplementationSpecific / Exact
        backend:
          service:
            name: order-api-service # Name of the Service defined in service.yaml
            port:
              number: 80 # Port of the Service (not the targetPort of the container)
---
# Notes:
# - This Ingress manifest is a basic example. You'll need an Ingress controller (like NGINX, Traefik, HAProxy) running in your cluster.
# - The `host` field is optional. If omitted, the Ingress might apply to a default IP or all hostnames depending on the controller.
# - `pathType: Prefix` is common. `ImplementationSpecific` gives more control to the Ingress controller.
# - Annotations are highly dependent on the Ingress controller you are using. Consult its documentation.
#   The `nginx.ingress.kubernetes.io/rewrite-target` example shows how you might strip `/orders` if your app doesn't expect it.
#   However, the Spring Boot app is mapped to `/orders`, so rewrite might not be needed or needs to be `/` if `/orders` is stripped by gateway.
#   The current path `/orders(/|$)(.*)` and backend service should work if the app handles `/orders`.
# - For SSL, you'd typically use cert-manager to automate certificate provisioning and reference the secret in the `tls` section.
# - Ensure the `service.name` and `service.port.number` match your Service definition.
