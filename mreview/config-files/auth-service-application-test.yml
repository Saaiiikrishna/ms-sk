spring:
  application:
    name: auth-service-test

  # Use H2 in-memory database for testing
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop # For tests, create-drop is usually fine
    show-sql: false # Set to true for debugging
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  h2:
    console:
      enabled: true
  # Kafka properties for tests - will be overridden by EmbeddedKafka if its properties are different
  # but good to have placeholders or test-specific settings.
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers:localhost:9093} # Use embedded kafka brokers property
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer: # Example consumer config if needed by tests directly
      group-id: test-auth-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer # Or StringDeserializer if consuming raw JSON
      properties:
        spring.json.trusted.packages: "*"


keycloak:
  # These will be overridden by BaseControllerIntegrationTest.Initializer from Testcontainers
  realm: TestRealm # Matches test-realm.json
  auth-server-url: http://dummy-keycloak:8080/auth # Placeholder, will be overridden
  resource: auth-service-client-test # Matches test-realm.json
  credentials:
    secret: test-secret # Matches test-realm.json
  ssl-required: none # For test environment
  bearer-only: false
  # Ensure Keycloak Admin Client uses these if it's configured via properties
  # admin-client:
    # server-url: ${keycloak.auth-server-url}
    # realm: ${keycloak.realm} # Or 'master' depending on how you set up service account for admin ops
    # client-id: ${keycloak.resource} # Or a dedicated admin client
    # client-secret: ${keycloak.credentials.secret}

jwt:
  secret: TestThisIsAReallyLongAndSecureSecretKeyForTestingAuthServicePleaseChange # Min 64 chars for HS512
  expiration-ms: 60000 # 1 minute for tests, easier to test expiration

# Test application properties
app:
  simple-encryption:
    secret-key: TestEncryptionKeyForIntegrationTests123456789!

  mfa:
    issuer-name: TestPlatform

  internal-api:
    secret-key: TestInternalApiKeyForIntegrationTests123456789!

  cors:
    allowed-origins: http://localhost:3000,http://localhost:3001

logging:
  level:
    com.mysillydreams.auth: DEBUG
    org.springframework.security: DEBUG # For debugging security flow in tests
    org.keycloak: DEBUG
    org.hibernate.SQL: DEBUG
    # org.hibernate.type.descriptor.sql: TRACE # For bound parameters
    # org.apache.kafka: DEBUG

# Disable Liquibase for tests if it's enabled in main application.yml and not needed for IT tests
# spring.liquibase.enabled: false
management:
  endpoints:
    web:
      exposure:
        include: "*" # Expose all for testing if needed
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
server:
  shutdown: immediate # Faster shutdown for tests
