apiVersion: v1
kind: ConfigMap
metadata:
  name: order-core-config
  namespace: default # Or your target namespace
data:
  SPRING_PROFILES_ACTIVE: "kubernetes"

  # Database connection (host and db name, port can also be here or in URL directly)
  DB_HOST: "order-core-postgres-service" # K8s service name for PostgreSQL
  DB_PORT: "5432"
  DB_NAME: "orderdb"

  # Kafka
  KAFKA_BROKER: "kafka-cluster-kafka-brokers:9092" # K8s service name for Kafka brokers
  SCHEMA_REGISTRY_URL: "http://kafka-cluster-schema-registry-service:8081" # K8s service for Schema Registry

  # Keycloak
  KEYCLOAK_URL: "http://keycloak-service:8080/auth" # K8s service for Keycloak

  # Application specific
  APP_OUTBOX_POLL_DELAY_MS: "2000"
  APP_OUTBOX_INITIAL_DELAY_MS: "10000" # Longer initial delay in K8s might be good

  # Kafka Topics (examples, ensure these match actual topic strategy)
  # Produced by Order-Core
  ORDER_CORE_TOPIC_ORDER_CREATED: "order.core.created"
  ORDER_CORE_TOPIC_ORDER_CANCELLED: "order.core.cancelled"
  ORDER_CORE_TOPIC_STATUS_PREFIX: "order.core.status"
  # Consumed by Order-Core
  CONSUMED_TOPIC_RESERVATION_SUCCEEDED: "inventory.reservation.succeeded"
  CONSUMED_TOPIC_RESERVATION_FAILED: "inventory.reservation.failed"
  CONSUMED_TOPIC_PAYMENT_SUCCEEDED: "payment.payment.succeeded"
  CONSUMED_TOPIC_PAYMENT_FAILED: "payment.payment.failed"
  CONSUMED_TOPIC_ORDERAPI_CREATED: "order.api.created" # If consuming Order-API's event

  # Logging levels (example)
  LOGGING_LEVEL_COM_MYSILLYDREAMS_ORDERCORE: "INFO"
  LOGGING_LEVEL_ORG_HIBERNATE_SQL: "WARN"
  # Set to DEBUG for SQL logging if needed, but use show-sql=false in JPA properties for production

  # Resilience4j default configs (example, can be overridden per instance in code/yml)
  # RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_FAILURE_RATE_THRESHOLD: "50"
  # RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_WAIT_DURATION_IN_OPEN_STATE: "10s"
---
# Notes:
# - Replace service names like "order-core-postgres-service", "kafka-cluster-kafka-brokers",
#   "kafka-cluster-schema-registry-service", "keycloak-service" with your actual Kubernetes service names.
# - Topic names should be consistent with your Kafka setup and inter-service communication plan.
# - These values will be injected as environment variables into the Order-Core pods.
# - Ensure `application.yml` uses these environment variables (e.g., `${DB_HOST}`).
